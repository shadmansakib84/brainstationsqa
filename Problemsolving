//main


import java.util.*;
import java.lang.*;
import java.io.*;


class Main {
    // public static void main(String[] args) {
    //     // Scanner sc= new Scanner(System.in); 
    //     // System.out.print("Enter total number of students: ");  
    //     // int a= sc.nextInt(); 
    //     // System.out.println(a);
    //     //  System.out.print("Enter students information (ID NAME CGPA): ");  
    //     // String b= sc.nextLine(); 
    //     // System.out.println(b);
    // }
    public static void main(String[] args) 
    {
        Scanner sc= new Scanner(System.in); 
        System.out.print("Enter total number of students: ");  
        int totalNumberOfStudents= sc.nextInt(); 
        System.out.print("Enter students information (ID NAME CGPA): *followed by space \n");  
        sc.nextLine();
        String studentListStr= sc.nextLine();  
        
        ArrayList<Student> students = getUnsortedEmployeeList(totalNumberOfStudents,studentListStr);
        //var ss = "33 Rumpa 3.68 85 Ashis 3.85 56 Samiha 3.75 19 Samara 3.75 22 Fahim 3.76";
        Collections.sort(students, 
             Comparator.comparing(Student::getCGPA).reversed()
            .thenComparing(Student::getName)
            .thenComparing(Student::getId));
         
        System.out.println(students);
    }
    private static ArrayList<Student> getUnsortedEmployeeList(int studentCount,String inputString) 
    {
        ArrayList<Student> list = new ArrayList<>();
        try{
            String[] inputList = inputString.split(" ");
            for(int i = 0; i < studentCount*3; i+=3) 
            {
                Student e = new Student();
                e.setId(Integer.parseInt(inputList[i]) );
                e.setName(inputList[i+1]);
                e.setCGPA(Float.parseFloat(inputList[i+2]));
                list.add(e);
                //validate each property here by separate functions, if validation fails stop the loop and console.write the validation message
            }
        }
        catch(Exception e){
            System.out.println("Invalid input provided! Please provide valid input.");
        }
        return list;
    }
}




//student


public class Student {
  
    private Integer id;
    private String name;
    private Float cgpa;
     
    public Integer getId() {
        return id;
    }
    public void setId(Integer id) {
        this.id = id;
    }
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public Float getCGPA() {
        return cgpa;
    }
    public void setCGPA(Float cgpa) {
        this.cgpa = cgpa;
    }
 
    @Override
    public String toString() {
        return "Student [Name =" + name + "]";
    }
 
    // @Override
    // public int compareTo(Student o) {
    //     return this.getId().compareTo(o.getId());
    // }
    // @Override public int compare(final Student record1, final Student record2) {
    //     int c;
    //     c = record1.getCGPA().compareTo(record2.getCGPA());
    //     if (c == 0)
    //        c = record1.getName().compareTo(record2.getName());
    //     if (c == 0)
    //        c = record1.getId().compareTo(record2.getId());
    //     return c;
    // }
}
